// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SAP_API.DataAccess.DbContexts;

namespace SAP_API.Migrations
{
    [DbContext(typeof(BakeryContext))]
    partial class BakeryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SAP_API.Models.BakingProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("BakingEndsAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("BakingProgrammedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("BakingStartedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("BakingTempInC")
                        .HasColumnType("integer");

                    b.Property<int>("BakingTimeInMins")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("OvenId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PreparedById")
                        .HasColumnType("uuid");

                    b.Property<int>("RemainingOvenCapacity")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("Code");

                    b.HasIndex("OvenId");

                    b.HasIndex("PreparedById");

                    b.ToTable("BakingProgram");
                });

            modelBuilder.Entity("SAP_API.Models.BakingProgramProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BakingProgramId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("QuantityТoBake")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BakingProgramId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("BakingProgramProduct");
                });

            modelBuilder.Entity("SAP_API.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("Telephone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("SAP_API.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ShouldBeDoneAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("SAP_API.Models.Oven", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxTempInC")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("Code");

                    b.ToTable("Oven");
                });

            modelBuilder.Entity("SAP_API.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BakingTempInC")
                        .HasColumnType("integer");

                    b.Property<int>("BakingTimeInMins")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("SAP_API.Models.ProductToPrepare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BakingProgramId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LocationToPrepareFromId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("QuantityToPrepare")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BakingProgramId");

                    b.HasIndex("LocationToPrepareFromId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductToPrepare");
                });

            modelBuilder.Entity("SAP_API.Models.ReservedOrderProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LocationWhereProductIsReservedId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<int>("PreparedQuantity")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("ReservedQuantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationWhereProductIsReservedId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ReservedOrderProduct");
                });

            modelBuilder.Entity("SAP_API.Models.StockLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("Code");

                    b.ToTable("StockLocation");
                });

            modelBuilder.Entity("SAP_API.Models.StockedProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ReservedQuantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.ToTable("StockedProduct");
                });

            modelBuilder.Entity("SAP_API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SAP_API.Models.BakingProgram", b =>
                {
                    b.HasOne("SAP_API.Models.Oven", "Oven")
                        .WithMany()
                        .HasForeignKey("OvenId");

                    b.HasOne("SAP_API.Models.User", "PreparedBy")
                        .WithMany()
                        .HasForeignKey("PreparedById");

                    b.Navigation("Oven");

                    b.Navigation("PreparedBy");
                });

            modelBuilder.Entity("SAP_API.Models.BakingProgramProduct", b =>
                {
                    b.HasOne("SAP_API.Models.BakingProgram", null)
                        .WithMany("Products")
                        .HasForeignKey("BakingProgramId");

                    b.HasOne("SAP_API.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("SAP_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SAP_API.Models.Order", b =>
                {
                    b.HasOne("SAP_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SAP_API.Models.ProductToPrepare", b =>
                {
                    b.HasOne("SAP_API.Models.BakingProgram", "BakingProgram")
                        .WithMany()
                        .HasForeignKey("BakingProgramId");

                    b.HasOne("SAP_API.Models.StockLocation", "LocationToPrepareFrom")
                        .WithMany()
                        .HasForeignKey("LocationToPrepareFromId");

                    b.HasOne("SAP_API.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("SAP_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("BakingProgram");

                    b.Navigation("LocationToPrepareFrom");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SAP_API.Models.ReservedOrderProduct", b =>
                {
                    b.HasOne("SAP_API.Models.StockLocation", "LocationWhereProductIsReserved")
                        .WithMany()
                        .HasForeignKey("LocationWhereProductIsReservedId");

                    b.HasOne("SAP_API.Models.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId");

                    b.HasOne("SAP_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("LocationWhereProductIsReserved");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SAP_API.Models.StockedProduct", b =>
                {
                    b.HasOne("SAP_API.Models.StockLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("SAP_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Location");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SAP_API.Models.BakingProgram", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SAP_API.Models.Order", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
